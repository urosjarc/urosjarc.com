openapi: "3.0.3"
info:
  title: "server API"
  description: "server API"
  version: "1.0.0"
servers:
- url: "https://server"
paths:
  /:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Hello World!"
  /admin:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "OK YOU ARE ADMIN :)"
  /auth/prijava:
    post:
      description: ""
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/PrijavaReq"
        required: true
      responses:
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorRes"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorRes"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorRes"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PrijavaRes"
  /auth/profil:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Profil"
  /profil:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OsebaData"
  /profil/audits:
    get:
      description: ""
      parameters:
      - name: "stran"
        in: "query"
        required: false
        schema:
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Audit"
  /profil/test/{test_id}/audits:
    get:
      description: ""
      parameters:
      - name: "test_id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Audit"
  /profil/test/{test_id}/status/{status_id}:
    put:
      description: ""
      parameters:
      - name: "test_id"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "status_id"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/StatusUpdateReq"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Status"
  /profil/test/{test_id}/status/{status_id}/audits:
    get:
      description: ""
      parameters:
      - name: "test_id"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "status_id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Audit"
components:
  schemas:
    PrijavaReq:
      type: "object"
      properties:
        username:
          type: "string"
    ErrorRes:
      type: "object"
      properties:
        napaka:
          type: "string"
          enum:
          - "UPORABNISKA"
          - "SISTEMSKA"
        razred:
          type: "string"
        info:
          type: "string"
    PrijavaRes:
      type: "object"
      properties:
        token:
          type: "string"
    Profil:
      type: "object"
      properties:
        id:
          type: "string"
        tip:
          type: "string"
          enum:
          - "UCENEC"
          - "UCITELJ"
          - "INSTRUKTOR"
          - "ADMIN"
    Oseba:
      type: "object"
      properties:
        _id:
          type: "string"
        ime:
          type: "string"
        priimek:
          type: "string"
        username:
          type: "string"
        tip:
          type: "string"
          enum:
          - "UCENEC"
          - "UCITELJ"
          - "INSTRUKTOR"
          - "ADMIN"
    Naslov:
      type: "object"
      properties:
        _id:
          type: "string"
        oseba_id:
          type: "string"
        drzava:
          type: "string"
        mesto:
          type: "string"
        ulica:
          type: "string"
        zip:
          type: "integer"
          format: "int32"
        dodatno:
          type: "string"
    Ucenje:
      type: "object"
      properties:
        _id:
          type: "string"
        oseba_ucenec_id:
          type: "string"
        oseba_ucitelj_id:
          type: "string"
    UcenjeData:
      type: "object"
      properties:
        ucenje:
          $ref: "#/components/schemas/Ucenje"
        oseba_refs:
          type: "array"
          items:
            $ref: "#/components/schemas/Oseba"
        ucenje_ucenec_refs:
          type: "array"
          items:
            $ref: "#/components/schemas/UcenjeData"
    Kontakt:
      type: "object"
      properties:
        _id:
          type: "string"
        oseba_id:
          type: "string"
        data:
          type: "string"
        tip:
          type: "string"
          enum:
          - "EMAIL"
          - "TELEFON"
    Sporocilo:
      type: "object"
      properties:
        _id:
          type: "string"
        kontakt_posiljatelj_id:
          type: "string"
        kontakt_prejemnik_id:
          type: "string"
        vsebina:
          type: "string"
    SporociloData:
      type: "object"
      properties:
        sporocilo:
          $ref: "#/components/schemas/Sporocilo"
        kontakt_refs:
          type: "array"
          items:
            $ref: "#/components/schemas/KontaktData"
    KontaktData:
      type: "object"
      properties:
        kontakt:
          $ref: "#/components/schemas/Kontakt"
        oseba_refs:
          type: "array"
          items:
            $ref: "#/components/schemas/Oseba"
        sporocilo_prejemnik_refs:
          type: "array"
          items:
            $ref: "#/components/schemas/SporociloData"
        sporocilo_posiljatelj_refs:
          type: "array"
          items:
            $ref: "#/components/schemas/SporociloData"
    LocalDate:
      type: "object"
      properties: {}
    Test:
      type: "object"
      properties:
        _id:
          type: "string"
        oseba_id:
          type: "string"
        naslov:
          type: "string"
        podnaslov:
          type: "string"
        deadline:
          $ref: "#/components/schemas/LocalDate"
    Status:
      type: "object"
      properties:
        _id:
          type: "string"
        naloga_id:
          type: "string"
        test_id:
          type: "string"
        tip:
          type: "string"
          enum:
          - "NEZACETO"
          - "NERESENO"
          - "NAPACNO"
          - "PRAVILNO"
        pojasnilo:
          type: "string"
    Naloga:
      type: "object"
      properties:
        _id:
          type: "string"
        tematika_id:
          type: "string"
        resitev:
          type: "string"
        vsebina:
          type: "string"
    Tematika:
      type: "object"
      properties:
        _id:
          type: "string"
        zvezek_id:
          type: "string"
        naslov:
          type: "string"
    NalogaData:
      type: "object"
      properties:
        naloga:
          $ref: "#/components/schemas/Naloga"
        tematika_refs:
          type: "array"
          items:
            $ref: "#/components/schemas/Tematika"
    StatusData:
      type: "object"
      properties:
        status:
          $ref: "#/components/schemas/Status"
        naloga_refs:
          type: "array"
          items:
            $ref: "#/components/schemas/NalogaData"
    TestData:
      type: "object"
      properties:
        test:
          $ref: "#/components/schemas/Test"
        status_refs:
          type: "array"
          items:
            $ref: "#/components/schemas/StatusData"
    OsebaData:
      type: "object"
      properties:
        oseba:
          $ref: "#/components/schemas/Oseba"
        naslov_refs:
          type: "array"
          items:
            $ref: "#/components/schemas/Naslov"
        ucenje_ucitelj_refs:
          type: "array"
          items:
            $ref: "#/components/schemas/UcenjeData"
        kontakt_refs:
          type: "array"
          items:
            $ref: "#/components/schemas/KontaktData"
        test_refs:
          type: "array"
          items:
            $ref: "#/components/schemas/TestData"
    LocalDateTime:
      type: "object"
      properties: {}
    Audit:
      type: "object"
      properties:
        _id:
          type: "string"
        entitete_id:
          type: "array"
          items:
            type: "string"
        tip:
          type: "string"
          enum:
          - "STATUS_POSODOBITEV"
        opis:
          type: "string"
        trajanje:
          type: "integer"
          format: "int64"
        entiteta:
          type: "string"
        ustvarjeno:
          $ref: "#/components/schemas/LocalDateTime"
    StatusUpdateReq:
      type: "object"
      properties:
        tip:
          type: "string"
          enum:
          - "NEZACETO"
          - "NERESENO"
          - "NAPACNO"
          - "PRAVILNO"
        sekund:
          type: "integer"
          format: "int32"